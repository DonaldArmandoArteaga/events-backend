# This workflow will build and push a new container image to Amazon ECR,
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.

name: Push to Amazon ECR Docker image

on:
  push:
    branches:
      - "main"

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: o0u3o2v9
  CONTAINER_NAME: events-backend

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr-public get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin public.ecr.aws/$ECR_REPOSITORY
          docker build -t $CONTAINER_NAME .
          docker tag $CONTAINER_NAME:$IMAGE_TAG public.ecr.aws/$ECR_REPOSITORY/$CONTAINER_NAME:$IMAGE_TAG
          docker push public.ecr.aws/$ECR_REPOSITORY/$CONTAINER_NAME:$IMAGE_TAG
